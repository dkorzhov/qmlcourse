name: pre-commit-deploy-book

on:
  workflow_dispatch:
    inputs:
      DisableCache:
        description: 'Disable cache'
        required: false
        default: 'false'
  pull_request:

# This job installs dependencies, build the book, and pushes it to `gh-pages`
jobs:
  # pre-commit:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v2.2.2
  #     - uses: pre-commit/action@v2.0.3
  #       with:
  #         extra_args: --all-files

  deploy-book:
    runs-on: ubuntu-latest
    # needs: [pre-commit]
    env:
      TF_CPP_MIN_LOG_LEVEL: 3
    steps:
      - name: Checkout branch for build
        uses: actions/checkout@v2

      - name: Checkout branch with cache
        uses: actions/checkout@v2
        with:
          ref: "gh-pages"
          path: ./gh-pages

      - name: Copy cache for build book
        if: ${{ github.event.inputs.DisableCache != 'true' }}
        run: |
          cp -r ./gh-pages/_build/ ./qmlcourseRU/ || exit 0

      # Install dependencies
      - name: Set up Python 3.8
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.8

      - name: Set up poetry
        uses: snok/install-poetry@v1.1.6
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      #Use cache
      - name: Copy cache dir for dependecies
        uses: actions/cache@v2
        env:
          cache-name: cache-poetry-modules
        with:
          path: .venv
          key: venv2-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry install

      - name: Build the book
        run: |
          poetry run jupyter-book build ./qmlcourseRU

      - name: Build PDF file
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          poetry run jupyter-book build ./qmlcourseRU --builder pdfhtml

      - uses: actions/upload-artifact@v2
        if: ${{ github.event_name == 'workflow_dispatch' }}
        with:
          name: bookPDF
          path: ./qmlcourseRU/_build/pdf/book.pdf

      - name: Delete pdf file
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          rm ./qmlcourseRU/_build/pdf/book.pdf

      - name: Use toc1.yaml
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          poetry run jupyter-book toc migrate ./qmlcourseRU/toc/_toc1.yml --path-output ./qmlcourseRU/_toc.yml
          poetry run jupyter-book build ./qmlcourseRU --builder pdfhtml
          mv ./qmlcourseRU/_build/pdf/book.pdf ./qmlcourseRU/_build/pdf/toc1.pdf

      - name: Use toc2.yaml
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          poetry run jupyter-book toc migrate ./qmlcourseRU/toc/_toc2.yml -o ./qmlcourseRU/_toc.yml
          poetry run jupyter-book build ./qmlcourseRU --builder pdfhtml
          mv ./qmlcourseRU/_build/pdf/book.pdf ./qmlcourseRU/_build/pdf/toc2.pdf                     

      # Push the book's HTML to github-pages
      - name: GitHub Pages action
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./qmlcourseRU
