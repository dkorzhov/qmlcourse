import psi4

h_atom = psi4.geometry("H")

psi4.set_options({
  'basis': 'STO-3G',
  'reference': 'rohf',
})

from scipy.constants import physical_constants

h2ev = physical_constants['hartree-electron volt relationship']

def e_in_ev(energy_in_ht):
    return energy_in_ht * h2ev[0]

e_in_ht = psi4.energy('scf') # энергия в единицах Hartree
print(f"Hydrogen ground state energy: {e_in_ev(e_in_ht)} eV")

psi4.core.clean()

h_atom = psi4.geometry("H")

psi4.set_options({
  'basis': 'd-aug-cc-pv5z', # разбор этого базиса выходит за рамки этого интро
  'scf_type': 'pk',
  'reference': 'rohf'
})

e_in_ht = psi4.energy('scf')
print(f"Better hydrogen ground state energy: {e_in_ev(e_in_ht)} eV")

psi4.core.clean()

he_atom = psi4.geometry("He")

psi4.set_options({
  'basis': 'STO-3G',
  'reference': 'rohf',
})

e_in_ht = psi4.energy('scf')
print(f"Helium ground state energy: {e_in_ev(e_in_ht)} eV")

psi4.core.clean()

h_mol = psi4.geometry("""
H 0 0 0
H 0 0 0.74
""") # задали 2 атома водорода с явными координатами

psi4.set_options({
  'basis': 'STO-3G',
  'reference': 'rohf',
})

e_in_ht_h = psi4.energy('scf', molecule=h_mol)
print(f"Hydrogen ground state energy: {e_in_ev(e_in_ht_h)} eV")

psi4.core.clean()

h_mol_bad = psi4.geometry("""
H 0 0 0
H 0 0 1.5
""") # неверное расстояние в ангстремах


psi4.set_options({
  'basis': 'STO-3G',
  'reference': 'rohf',
})

# рассчитываем энергию "в точке" с неправильной геометрией
e_in_ht_h_bad = psi4.energy('scf', molecule=h_mol_bad)

# рассчитываем энергию, оптимизируя по ходу геометрию
e_in_ht_h_optimized = psi4.optimize('scf', molecule=h_mol_bad)

print(f"Hydrogen molecule, incorrect ground state energy: {e_in_ev(e_in_ht_h_bad)} eV")
print(f"Hydrogen molecule, optimized ground state energy: {e_in_ev(e_in_ht_h_optimized)} eV")


psi4.core.clean()

eth = psi4.geometry("pubchem:ethanol")

psi4.set_options({
  'basis': 'STO-3G',
  'reference': 'rohf',
})

e_in_ht_eth = psi4.energy('scf', molecule=eth)

print(f"Ethanol ground state energy: {e_in_ev(e_in_ht_eth)} eV")

